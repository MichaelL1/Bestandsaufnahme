version: '3.8'

services:
  web:
    container_name: web_${STAGE}
    build:
      context: .
      dockerfile: ./resource/docker/django/Dockerfile
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - static_volume:/opt/project/staticfiles
      - .:/opt/project
    read_only: false
    ports:
      - 80:8010
    # env_file is used to manage the env variables of our project
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_PROJECT_NAME}.settings
      - DJANGO_PROJECT_NAME=${DJANGO_PROJECT_NAME}
      - STAGE=${STAGE}
    depends_on:
      - db
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  db:
    container_name: db_${STAGE}
    image: postgres:14-alpine
    build:
      context: .
      dockerfile: ./resource/docker/postgres/Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=docker
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
    ports:
      - 8001:5432
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
  nginx:
    container_name: nginx_${STAGE}
    build: ./resource/docker/nginx
    volumes:
      - static_volume:/opt/project/staticfiles
    environment:
      - DJANGO_PROJECT_NAME=${DJANGO_PROJECT_NAME}
    ports:
      - 1337:80
    depends_on:
      - web
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

volumes:
  postgres_data:
  static_volume: